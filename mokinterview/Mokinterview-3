
-- Create & Use Database
DROP DATABASE IF EXISTS CompanyDB;
CREATE DATABASE CompanyDB;
USE CompanyDB;
-- Create Tables

-- Department
CREATE TABLE Department (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(100) NOT NULL,
    location VARCHAR(100) NOT NULL
);

-- Employee
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    gender CHAR(1) CHECK (gender IN ('M','F')),
    dob DATE,
    hire_date DATE,
    dept_id INT,
    salary DECIMAL(10,2),
    email VARCHAR(150) UNIQUE,
    FOREIGN KEY (dept_id) REFERENCES Department(dept_id)
);

-- Project
CREATE TABLE Project (
    proj_id INT PRIMARY KEY,
    proj_name VARCHAR(100) NOT NULL,
    start_date DATE,
    end_date DATE,
    budget DECIMAL(12,2),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES Department(dept_id)
);

-- Assignment
CREATE TABLE Assignment (
    assign_id INT PRIMARY KEY,
    emp_id INT,
    proj_id INT,
    job_role VARCHAR(100),  -- renamed from 'role'
    hours_worked INT,
    FOREIGN KEY (emp_id) REFERENCES Employee(emp_id),
    FOREIGN KEY (proj_id) REFERENCES Project(proj_id)
);

---------------------------------------------------------------
-- Insert Sample Data
---------------------------------------------------------------

-- Departments
INSERT INTO Department VALUES
(101, 'IT', 'Delhi'),
(102, 'Finance', 'Mumbai'),
(103, 'HR', 'Bangalore');

-- Employees
INSERT INTO Employee (emp_id, name, gender, dob, hire_date, dept_id, salary, email) VALUES
(1, 'Amit Sharma', 'M', '1990-05-10', '2021-01-15', 101, 65000, 'amit@gmail.com'),
(2, 'Anita Verma', 'F', '1993-08-20', '2019-07-10', 102, 72000, 'anita@gmail.com'),
(3, 'Ravi Kumar', 'M', '1988-11-30', '2018-03-25', NULL, 55000, 'ravi@gmail.com'),
(4, 'Ajay Singh', 'M', '1992-03-12', '2020-06-01', 101, 80000, 'ajay@gmail.com'),
(5, 'Meena Joshi', 'F', '1995-07-22', '2022-09-10', 103, 48000, 'meena@gmail.com');

-- Projects
INSERT INTO Project VALUES
(201, 'Project Alpha', '2021-01-01', '2021-12-31', 500000, 101),
(202, 'Project Beta', '2020-05-01', '2022-05-01', 300000, 102),
(203, 'Project Gamma', '2022-02-01', '2022-12-31', 200000, 103);

-- Assignments
INSERT INTO Assignment VALUES
(301, 1, 201, 'Developer', 1200),
(302, 2, 202, 'Manager', 1500),
(303, 4, 201, 'Tester', 900),
(304, 4, 202, 'Developer', 1000),
(305, 5, 203, 'HR Assistant', 800);

---------------------------------------------------------------
-- Section-1 Queries (1–20)
---------------------------------------------------------------

-- 4. Increase salaries by 10%
UPDATE Employee SET salary = salary * 1.10;

-- 5. Remove employees not in any project
DELETE FROM Employee
WHERE emp_id NOT IN (SELECT emp_id FROM Assignment);

-- 6. Employees with salary 50k–80k
SELECT * FROM Employee WHERE salary BETWEEN 50000 AND 80000;

-- 7. Names starting with A
SELECT name FROM Employee WHERE name LIKE 'A%';

-- 8. Employees hired after 2020-01-01
SELECT * FROM Employee WHERE hire_date > '2020-01-01';

-- 9. Unique job roles
SELECT DISTINCT job_role FROM Assignment;

-- 10. Count employees per dept
SELECT dept_id, COUNT(*) AS total_employees
FROM Employee
GROUP BY dept_id;

-- 11. Employees with no dept
SELECT * FROM Employee WHERE dept_id IS NULL;

-- 12. Sort employees by salary desc
SELECT * FROM Employee ORDER BY salary DESC;

-- 13. Top 3 highest-paid employees
SELECT * FROM Employee ORDER BY salary DESC LIMIT 3;

-- 14. Employees not in IT dept
SELECT * FROM Employee
WHERE dept_id != (SELECT dept_id FROM Department WHERE dept_name = 'IT');

-- 15. Employees salary < 60k and role=Developer
SELECT e.* FROM Employee e
JOIN Assignment a ON e.emp_id = a.emp_id
WHERE e.salary < 60000 AND a.job_role = 'Developer';

-- 16. Employees above avg salary
SELECT * FROM Employee
WHERE salary > (SELECT AVG(salary) FROM Employee);

-- 17. Employees born in March
SELECT * FROM Employee WHERE MONTH(dob) = 3;

-- 18. Total salary per dept
SELECT dept_id, SUM(salary) AS total_salary
FROM Employee GROUP BY dept_id;

-- 19. Salary classification
SELECT name, salary,
  CASE
    WHEN salary < 50000 THEN 'Low'
    WHEN salary BETWEEN 50000 AND 80000 THEN 'Medium'
    ELSE 'High'
  END AS salary_category
FROM Employee;

-- 20. Check Finance dept exists
SELECT * FROM Department WHERE dept_name = 'Finance';

---------------------------------------------------------------
-- Section-2 Queries (21–40)
---------------------------------------------------------------

-- 21. Age of each employee
SELECT name, TIMESTAMPDIFF(YEAR, dob, CURDATE()) AS age
FROM Employee;

-- 22. Current date
SELECT CURDATE() AS today_date;

-- 23. Concatenate name + email
SELECT CONCAT(name, ' - ', email) AS emp_contact FROM Employee;

-- 24. First 5 chars of names
SELECT LEFT(name, 5) AS short_name FROM Employee;

-- 25. Names in uppercase
SELECT UPPER(name) AS name_upper FROM Employee;

-- 26. Project duration
SELECT proj_id, proj_name, DATEDIFF(end_date, start_date) AS duration_days
FROM Project;

-- 27. Employees earning more than Amit
SELECT * FROM Employee
WHERE salary > (SELECT salary FROM Employee WHERE name = 'Amit Sharma');

