-- Create Database
CREATE DATABASE ElectricityDept;
USE ElectricityDept;

------------------------------------------------
-- 1. Customer Table
------------------------------------------------
CREATE TABLE Customer (
    CustomerID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Address VARCHAR(200),
    City VARCHAR(50),
    Contact VARCHAR(15) UNIQUE,
    ConnectionDate DATE,
    Status VARCHAR(20) DEFAULT 'Active'
);

INSERT INTO Customer (Name, Address, City, Contact, ConnectionDate, Status) VALUES
('Rahul Sharma','Aliganj','Lucknow','9876543210','2021-02-15','Active'),
('Amit Verma','Karol Bagh','Delhi','9123456789','2019-05-20','Active'),
('Priya Singh','Andheri','Mumbai','9988776655','2022-08-10','Active'),
('Anil Kumar','Sector 15','Noida','9871203456','2020-01-25','Inactive'),
('Sonal Gupta','Vijay Nagar','Indore','9911223344','2021-11-05','Active'),
('Aditya Jain','Connaught Place','Delhi','9876549876','2023-03-17','Active'),
('Kiran Mehta','MG Road','Pune','9123987654','2020-06-22','Inactive'),
('Neha Yadav','Charbagh','Lucknow','9823456712','2022-12-12','Active'),
('Vikram Rao','Bandra','Mumbai','9765432109','2018-09-09','Active'),
('Arjun Malhotra','DLF Phase 2','Gurgaon','9898989898','2023-01-01','Active');	

-- Practice Queries
SELECT * FROM Customer;
TRUNCATE TABLE Customer;
DROP TABLE Customer;

------------------------------------------------
-- 2. Meter Table
------------------------------------------------
CREATE TABLE Meter (
    MeterID INT AUTO_INCREMENT PRIMARY KEY,
    CustomerID INT,
    MeterType VARCHAR(20) CHECK (MeterType IN ('Domestic','Commercial')),
    InstallationDate DATE,
    Status VARCHAR(20),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);

INSERT INTO Meter (CustomerID, MeterType, InstallationDate, Status) VALUES
(1,'Domestic','2021-02-20','Active'),
(2,'Commercial','2019-06-01','Active'),
(3,'Domestic','2022-08-15','Active'),
(4,'Domestic','2020-02-01','Inactive'),
(5,'Commercial','2021-11-10','Active'),
(6,'Domestic','2023-03-20','Active'),
(7,'Commercial','2020-07-01','Inactive'),
(8,'Domestic','2022-12-20','Active'),
(9,'Commercial','2018-09-15','Active'),
(10,'Domestic','2023-01-05','Active');

-- Practice Queries
SELECT * FROM Meter;
TRUNCATE TABLE Meter;
DROP TABLE Meter;

------------------------------------------------
-- 3. Bill Table
------------------------------------------------
CREATE TABLE Bill (
    BillID INT AUTO_INCREMENT PRIMARY KEY,
    CustomerID INT,
    MeterID INT,
    BillMonth VARCHAR(20),
    UnitsConsumed INT,
    Amount DECIMAL(10,2),
    DueDate DATE,
    Status VARCHAR(20),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
    FOREIGN KEY (MeterID) REFERENCES Meter(MeterID)
);

INSERT INTO Bill (CustomerID, MeterID, BillMonth, UnitsConsumed, Amount, DueDate, Status) VALUES
(1,1,'Jan-2023',150,750,'2023-02-10','Paid'),
(2,2,'Jan-2023',300,2100,'2023-02-12','Overdue'),
(3,3,'Jan-2023',220,1540,'2023-02-15','Paid'),
(4,4,'Jan-2023',100,500,'2023-02-08','Overdue'),
(5,5,'Jan-2023',400,3300,'2023-02-20','Paid'),
(6,6,'Jan-2023',250,1750,'2023-02-18','Overdue'),
(7,7,'Jan-2023',350,2450,'2023-02-22','Paid'),
(8,8,'Jan-2023',90,450,'2023-02-25','Pending'),
(9,9,'Jan-2023',500,4100,'2023-02-28','Paid'),
(10,10,'Jan-2023',200,1400,'2023-02-12','Overdue');

-- Practice Queries
SELECT * FROM Bill;
TRUNCATE TABLE Bill;
DROP TABLE Bill;

------------------------------------------------
-- 4. Payment Table
------------------------------------------------
CREATE TABLE Payment (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,
    BillID INT,
    PaymentDate DATE,
    AmountPaid DECIMAL(10,2),
    Mode VARCHAR(20),
    Status VARCHAR(20),
    FOREIGN KEY (BillID) REFERENCES Bill(BillID)
);

INSERT INTO Payment (BillID, PaymentDate, AmountPaid, Mode, Status) VALUES
(1,'2023-02-05',750,'Online','Success'),
(3,'2023-02-16',1540,'Cash','Success'),
(5,'2023-02-18',3300,'Card','Success'),
(7,'2023-02-23',2450,'Online','Success'),
(9,'2023-03-01',4100,'UPI','Success'),
(2,'2023-03-10',2100,'Cash','Late'),
(4,'2023-02-20',500,'Card','Late'),
(6,'2023-03-05',1750,'UPI','Late'),
(8,'2023-03-15',450,'Online','Pending'),
(10,'2023-03-11',1400,'Cash','Late');

-- Practice Queries
SELECT * FROM Payment;
TRUNCATE TABLE Payment;
DROP TABLE Payment;

------------------------------------------------
-- 5. Staff Table
------------------------------------------------
CREATE TABLE Staff (
    StaffID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100),
    Role VARCHAR(50),
    Salary DECIMAL(10,2),
    Branch VARCHAR(50)
);

INSERT INTO Staff (Name, Role, Salary, Branch) VALUES
('Suresh Kumar','Manager',55000,'Lucknow'),
('Rita Verma','Clerk',25000,'Delhi'),
('Rajesh Singh','Technician',30000,'Mumbai'),
('Anita Sharma','Clerk',26000,'Noida'),
('Vivek Yadav','Manager',60000,'Indore'),
('Sunita Mehta','Technician',32000,'Delhi'),
('Aman Gupta','Clerk',24000,'Pune'),
('Neeraj Kumar','Manager',58000,'Lucknow'),
('Pooja Patel','Clerk',25500,'Mumbai'),
('Rohan Malhotra','Technician',31000,'Gurgaon');

-- Practice Queries
SELECT * FROM Staff;
TRUNCATE TABLE Staff;
DROP TABLE Staff;

------------------------------------------------
-- 6. Complaint Table
------------------------------------------------
CREATE TABLE Complaint (
    ComplaintID INT AUTO_INCREMENT PRIMARY KEY,
    CustomerID INT,
    Date DATE,
    Description VARCHAR(255),
    Status VARCHAR(20),
    StaffID INT,
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
    FOREIGN KEY (StaffID) REFERENCES Staff(StaffID)
);

INSERT INTO Complaint (CustomerID, Date, Description, Status, StaffID) VALUES
(1,'2023-02-10','Voltage fluctuation','Resolved',3),
(2,'2023-02-15','Meter not working','Pending',6),
(3,'2023-02-20','High bill issue','Resolved',2),
(4,'2023-02-25','Power cut','Pending',4),
(5,'2023-02-28','Frequent outages','Pending',7),
(6,'2023-03-01','Bill mismatch','Resolved',2),
(7,'2023-03-05','Connection issue','Pending',3),
(8,'2023-03-07','Wrong reading','Resolved',5),
(9,'2023-03-10','Late bill delivery','Pending',9),
(10,'2023-03-12','Low voltage','Resolved',10);

-- Practice Queries
SELECT * FROM Complaint;
TRUNCATE TABLE Complaint;
DROP TABLE Complaint;

-- -------------------------------------------------------------Sections A ---------------------------------------------------------------------------------------------------
-- Section A
-- DDL
Alter Table Bill
ADD LateFee DECIMAL(8,2);

-- DML
insert INTO Customer (Name, Address, City, Contact, ConnectionDate, Status)
VALUES ('Rahul Sharma','Aliganj','Lucknow','9876500000', CURRENT_DATE, 'Active');

update Bill
SET Status = 'Overdue'
WHERE DueDate < CURRENT_DATE;

-- DQL
select Name AS CustomerName, City, ConnectionDate
FROM Customer
WHERE ConnectionDate > '2020-12-31';

-- DCL
GRANT SELECT, UPDATE
ON Bill
TO 'clerk1'@'localhost';

-- TCL
START TRANSACTION;

-- Wrong Payment Insertion
INSERT INTO Payment (BillID, PaymentDate, AmountPaid, Mode, Status)
VALUES (5, '2023-09-17', 9999, 'Cash', 'Error');

-- Rollback the wrong transaction
ROLLBACK;

-- Correct Entry (after rollback)
INSERT INTO Payment (BillID, PaymentDate, AmountPaid, Mode, Status)
VALUES (5, '2023-09-17', 3300, 'Cash', 'Success');

COMMIT;

-- -----------------------------------------------------Seaction B (Clauses) -----------------------------------------------------------------------------------------------
select *
FROM Customer
where City = 'Delhi';

select City, COUNT(CustomerID) AS TotalConnections
from Customer
GROUP BY City;

SELECT c.City, MAX(b.Amount) AS MaxBillAmount
FROM Customer c
JOIN Bill b ON c.CustomerID = b.CustomerID
GROUP BY c.City;

select *
FROM Customer
WHERE Name LIKE 'A%';

select *
from Bill
ORDER BY Amount DESC
limit 5;

select CustomerID, AVG(UnitsConsumed) AS AvgUnits
FROM Bill
GROUP BY CustomerID
HAVING AVG(UnitsConsumed) > 200;

-- -----------------------------------------------------Section C – Constraints---------------------------------------------------------------------------------------------
CREATE TABLE Meter (
    MeterID INT AUTO_INCREMENT PRIMARY KEY,
    CustomerID INT,
    MeterType VARCHAR(20) CHECK (MeterType IN ('Domestic','Commercial')),
    InstallationDate DATE,
    Status VARCHAR(20),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID)
);
CREATE TABLE Bill (
    BillID INT AUTO_INCREMENT PRIMARY KEY,
    CustomerID INT,
    MeterID INT,
    BillMonth VARCHAR(20),
    UnitsConsumed INT,
    Amount DECIMAL(10,2),
    DueDate DATE,
    Status VARCHAR(20),
    FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID),
    FOREIGN KEY (MeterID) REFERENCES Meter(MeterID)
);
alter table Bill
ADD CONSTRAINT fk_bill_customer
FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID);

-- -----------------------------------------------------------Section D – Joins-------------------------------------------------------------------------------------------

Select c.Name AS CustomerName, m.MeterType, m.InstallationDate
FROM Customer c
INNER JOIN Meter m ON c.CustomerID = m.CustomerID;

Select c.Name AS CustomerName, b.BillID, b.BillMonth, b.Amount, b.Status
FROM Customer c
LEFT JOIN Bill b ON c.CustomerID = b.CustomerID;

Select s.StaffID, s.Name AS StaffName, s.Role
FROM Staff s
LEFT JOIN Complaint c ON s.StaffID = c.StaffID
WHERE c.ComplaintID IS NULL;

Select s.Name AS StaffName, SUM(p.AmountPaid) AS TotalCollected
FROM Payment p
JOIN Staff s ON p.StaffID = s.StaffID
WHERE p.Status = 'Success'
GROUP BY s.StaffID, s.Name;

SELECT c.Name AS CustomerName, b.BillID, b.DueDate, p.PaymentDate
FROM Customer c
JOIN Bill b ON c.CustomerID = b.CustomerID
JOIN Payment p ON b.BillID = p.BillID
WHERE p.PaymentDate > b.DueDate;

SELECT c.Name AS CustomerName, b.BillID, b.DueDate, p.PaymentDate
FROM Customer c
JOIN Bill b ON c.CustomerID = b.CustomerID
JOIN Payment p ON b.BillID = p.BillID
WHERE p.PaymentDate > b.DueDate;

-- ------------------------------------------------Section E – Subqueries-----------------------------------------------------------------------------------------------
SELECT c.Name, b.Amount
FROM Customer c
JOIN Bill b ON c.CustomerID = b.CustomerID
WHERE b.Amount = (SELECT MAX(Amount) FROM Bill);

SELECT c.Name, b.UnitsConsumed
FROM Customer c
JOIN Bill b ON c.CustomerID = b.CustomerID
WHERE b.UnitsConsumed > (SELECT AVG(UnitsConsumed) FROM Bill);

SELECT Amount
FROM Bill
WHERE Amount < (SELECT MAX(Amount) FROM Bill)
ORDER BY Amount DESC
LIMIT 1;

SELECT Name
FROM Customer
WHERE CustomerID NOT IN (
    SELECT DISTINCT b.CustomerID
    FROM Bill b
    JOIN Payment p ON b.BillID = p.BillID
);

SELECT c.Name, b.Amount, b.DueDate
FROM Customer c
JOIN Bill b ON c.CustomerID = b.CustomerID
WHERE b.Amount > (SELECT MAX(Salary) FROM Staff);

SELECT MIN(ConnectionDate) AS OldestConnection
FROM Customer;

SELECT ConnectionDate
FROM Customer
WHERE ConnectionDate = (SELECT MIN(ConnectionDate) FROM Customer);


